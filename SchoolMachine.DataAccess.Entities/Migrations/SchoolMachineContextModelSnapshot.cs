// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SchoolMachine.DataAccess.Entities;

namespace SchoolMachine.DataAccess.Entities.Migrations
{
    [DbContext(typeof(SchoolMachineContext))]
    partial class SchoolMachineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.SchoolData.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("district","schooldata");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ac112e56-9409-422e-8e5d-2bc9ac5ab05b"),
                            Name = "Austintown Local School District"
                        },
                        new
                        {
                            Id = new Guid("9c74ed78-e932-4d4f-bdd8-c39fcf172995"),
                            Name = "Bloomfield-Mespo Local School District"
                        },
                        new
                        {
                            Id = new Guid("98c8b304-ec0a-42cc-9842-57624fe6e3a8"),
                            Name = "Boardman Local School District"
                        },
                        new
                        {
                            Id = new Guid("23abe574-14d1-4b99-8c75-977be6c0bce8"),
                            Name = "Bristol Local School District"
                        },
                        new
                        {
                            Id = new Guid("3648ed8f-f71c-4b97-bebc-75f4ba32c7d9"),
                            Name = "Brookfield Local School District"
                        },
                        new
                        {
                            Id = new Guid("568baef0-8f0c-454e-adb8-858857a1ce57"),
                            Name = "Canfield Local School District"
                        },
                        new
                        {
                            Id = new Guid("0f4aac48-2179-4e3e-8036-71157353cfe8"),
                            Name = "Champion Local School District"
                        },
                        new
                        {
                            Id = new Guid("6f6c792e-eda8-44b4-acc3-7cafa6753700"),
                            Name = "Girard City School District"
                        },
                        new
                        {
                            Id = new Guid("06a9e290-17f6-44ac-b879-2c92c29cc7c5"),
                            Name = "Howland Local School District"
                        },
                        new
                        {
                            Id = new Guid("080e36da-d385-4134-9cb2-37828dbbf64f"),
                            Name = "Hubbard Exempted Village School District"
                        },
                        new
                        {
                            Id = new Guid("2096d914-933d-4794-9cf4-d0d589a6fc60"),
                            Name = "Howland Local School District"
                        },
                        new
                        {
                            Id = new Guid("0be7b00a-c3eb-4660-bdac-789284fed347"),
                            Name = "Hubbard Exempted Village School District"
                        },
                        new
                        {
                            Id = new Guid("255945ec-8f13-44cc-b3e0-5e6971bb6819"),
                            Name = "Jackson-Milton Local School District"
                        },
                        new
                        {
                            Id = new Guid("278dd3a4-d13f-4d5d-b521-8d2d300bde5d"),
                            Name = "Joseph Badger Local School District"
                        },
                        new
                        {
                            Id = new Guid("5bdfb4a0-ebe7-4a9a-89d6-db4abe1ca2f2"),
                            Name = "LaBrae Local School District"
                        },
                        new
                        {
                            Id = new Guid("462dd80c-80ba-4772-b9db-725b37761e63"),
                            Name = "Lakeview Local School District"
                        },
                        new
                        {
                            Id = new Guid("a502223e-927f-4d66-a811-0197ea69c8e4"),
                            Name = "Liberty Local School District"
                        },
                        new
                        {
                            Id = new Guid("0a7b30b9-844d-4f40-bc05-7228cccc1ee9"),
                            Name = "Lordstown Local School District"
                        },
                        new
                        {
                            Id = new Guid("31777f11-332d-4083-a01c-4e4fdaa03d48"),
                            Name = "Lowellville Local School District"
                        },
                        new
                        {
                            Id = new Guid("da9f6314-5dad-4442-a919-088612be16de"),
                            Name = "Maplewood Local School District"
                        },
                        new
                        {
                            Id = new Guid("f61479af-1ef2-451c-a624-44149eb85db6"),
                            Name = "Mathews Local School District"
                        },
                        new
                        {
                            Id = new Guid("9f2df305-1d70-4c82-9e0f-8498ddeca2df"),
                            Name = "McDonald Local School District"
                        },
                        new
                        {
                            Id = new Guid("b3df86d3-1345-40d0-9edc-ecb978ff9356"),
                            Name = "Newton Falls Exempted Village School District"
                        },
                        new
                        {
                            Id = new Guid("9aca2523-779d-47f8-a1df-3c5db0b5b7a4"),
                            Name = "Niles City School District"
                        },
                        new
                        {
                            Id = new Guid("37892e5e-f6b8-4dd6-abd6-a61c84923002"),
                            Name = "Sebring Local School District"
                        },
                        new
                        {
                            Id = new Guid("6fb4e100-a0db-495c-9322-5acea50bbadc"),
                            Name = "Southington Local School District"
                        },
                        new
                        {
                            Id = new Guid("d500c683-6b0d-405a-a433-09d8006753a8"),
                            Name = "South Range Local School District"
                        },
                        new
                        {
                            Id = new Guid("936d451e-800d-4149-bc69-347dcb2b817a"),
                            Name = "Springfield Local School District"
                        },
                        new
                        {
                            Id = new Guid("2836f926-6fdb-441b-8bef-b07092e2b2e6"),
                            Name = "Struthers City School District"
                        },
                        new
                        {
                            Id = new Guid("689be0e3-d639-46d7-803d-78322debf360"),
                            Name = "Trumbull Career & Technical Center"
                        },
                        new
                        {
                            Id = new Guid("f26c3c96-42cc-4990-96e2-e61a586cee5f"),
                            Name = "Trumbull County Educational Service Center"
                        },
                        new
                        {
                            Id = new Guid("c1c05dc2-bff7-4f3f-a779-be43c205a24f"),
                            Name = "Warren City School District"
                        },
                        new
                        {
                            Id = new Guid("627708e4-3165-4381-9092-92c735bf119e"),
                            Name = "Weathersfield Local School District"
                        },
                        new
                        {
                            Id = new Guid("0daaa034-31dd-4b03-adbc-ba3cd6d7e5b1"),
                            Name = "West Branch Local School District"
                        },
                        new
                        {
                            Id = new Guid("4bb93135-e5eb-4ead-b6f9-f17a76eccea8"),
                            Name = "Western Reserve Local School District"
                        },
                        new
                        {
                            Id = new Guid("b93c127b-6944-436f-9449-5603d777cc2a"),
                            Name = "Youngstown City School District"
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.SchoolData.DistrictSchool", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnName("date_created");

                    b.Property<Guid>("DistrictId")
                        .HasColumnName("district_id");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnName("end_date");

                    b.Property<Guid>("SchoolId")
                        .HasColumnName("school_id");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("start_date");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("SchoolId");

                    b.ToTable("district_school","schooldata");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d04ea3d4-759b-4127-a748-ccbe1d1225e6"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictId = new Guid("ac112e56-9409-422e-8e5d-2bc9ac5ab05b"),
                            SchoolId = new Guid("e2bf738c-c3e1-4b3f-bb5e-e9b39916a101"),
                            StartDate = new DateTime(2019, 3, 7, 0, 44, 49, 566, DateTimeKind.Utc).AddTicks(6905)
                        },
                        new
                        {
                            Id = new Guid("1a4b1bee-d5e7-47bd-8e7c-514b67fb132d"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictId = new Guid("9c74ed78-e932-4d4f-bdd8-c39fcf172995"),
                            SchoolId = new Guid("add594cf-b745-485a-ac80-54a6dc50d5d1"),
                            StartDate = new DateTime(2019, 3, 7, 0, 44, 49, 566, DateTimeKind.Utc).AddTicks(7475)
                        },
                        new
                        {
                            Id = new Guid("33141cf3-5b93-4190-9c7e-7c8dd35aec78"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictId = new Guid("9c74ed78-e932-4d4f-bdd8-c39fcf172995"),
                            SchoolId = new Guid("cbc08341-7a0d-4acf-a5e7-6960c68b813b"),
                            StartDate = new DateTime(2019, 3, 7, 0, 44, 49, 566, DateTimeKind.Utc).AddTicks(7488)
                        },
                        new
                        {
                            Id = new Guid("771f5f0b-1a39-4d1c-860a-dd8d04258a2c"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictId = new Guid("23abe574-14d1-4b99-8c75-977be6c0bce8"),
                            SchoolId = new Guid("f95acc0c-78c7-4a2a-8dcb-da5a40ac1041"),
                            StartDate = new DateTime(2019, 3, 7, 0, 44, 49, 566, DateTimeKind.Utc).AddTicks(7496)
                        },
                        new
                        {
                            Id = new Guid("1529f759-156d-47b7-9b27-b6b6422e3113"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictId = new Guid("23abe574-14d1-4b99-8c75-977be6c0bce8"),
                            SchoolId = new Guid("6c9536d4-a77d-450e-aeef-8f3d1936d59f"),
                            StartDate = new DateTime(2019, 3, 7, 0, 44, 49, 566, DateTimeKind.Utc).AddTicks(7505)
                        },
                        new
                        {
                            Id = new Guid("cfca42da-8562-4df2-8950-6d54c410ca64"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictId = new Guid("3648ed8f-f71c-4b97-bebc-75f4ba32c7d9"),
                            SchoolId = new Guid("1d580cde-3263-493f-be4b-760de01713e6"),
                            StartDate = new DateTime(2019, 3, 7, 0, 44, 49, 566, DateTimeKind.Utc).AddTicks(7515)
                        },
                        new
                        {
                            Id = new Guid("d8ed4439-6d8f-42b2-bac5-56186b0baa6f"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictId = new Guid("3648ed8f-f71c-4b97-bebc-75f4ba32c7d9"),
                            SchoolId = new Guid("012bc14a-396e-4074-b1a3-1b4d027fd53e"),
                            StartDate = new DateTime(2019, 3, 7, 0, 44, 49, 566, DateTimeKind.Utc).AddTicks(7529)
                        },
                        new
                        {
                            Id = new Guid("e15d9f80-1122-4052-8b2d-e7d338ac5b9e"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictId = new Guid("3648ed8f-f71c-4b97-bebc-75f4ba32c7d9"),
                            SchoolId = new Guid("4b8bee85-3673-4ee6-8f2e-f5535f5f04ca"),
                            StartDate = new DateTime(2019, 3, 7, 0, 44, 49, 566, DateTimeKind.Utc).AddTicks(7537)
                        },
                        new
                        {
                            Id = new Guid("dfec2780-1ff7-408b-b412-10fe8d8df115"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictId = new Guid("0f4aac48-2179-4e3e-8036-71157353cfe8"),
                            SchoolId = new Guid("eb5f060c-6df2-4eb2-b9a5-5acf85b02088"),
                            StartDate = new DateTime(2019, 3, 7, 0, 44, 49, 566, DateTimeKind.Utc).AddTicks(7546)
                        },
                        new
                        {
                            Id = new Guid("afdb099c-081c-4e44-9914-573b19d98505"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictId = new Guid("0f4aac48-2179-4e3e-8036-71157353cfe8"),
                            SchoolId = new Guid("e6f5652d-30c9-4e5d-975c-f63dbe97ed7b"),
                            StartDate = new DateTime(2019, 3, 7, 0, 44, 49, 566, DateTimeKind.Utc).AddTicks(7555)
                        },
                        new
                        {
                            Id = new Guid("383dc10e-bf4c-4da0-a5b9-d4b048ef8873"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictId = new Guid("0f4aac48-2179-4e3e-8036-71157353cfe8"),
                            SchoolId = new Guid("4c402f06-7e83-454d-9c57-286de97816f9"),
                            StartDate = new DateTime(2019, 3, 7, 0, 44, 49, 566, DateTimeKind.Utc).AddTicks(7563)
                        },
                        new
                        {
                            Id = new Guid("dae221d5-5baf-47e8-894f-3751ba879e37"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictId = new Guid("6f6c792e-eda8-44b4-acc3-7cafa6753700"),
                            SchoolId = new Guid("b7c65e6a-5581-4ce9-b8d6-dddf4aff0552"),
                            StartDate = new DateTime(2019, 3, 7, 0, 44, 49, 566, DateTimeKind.Utc).AddTicks(7572)
                        },
                        new
                        {
                            Id = new Guid("096866ca-1831-4ddf-8822-e9c05512d254"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictId = new Guid("6f6c792e-eda8-44b4-acc3-7cafa6753700"),
                            SchoolId = new Guid("81aa83c9-a7b5-4993-b896-a017ef4e64a9"),
                            StartDate = new DateTime(2019, 3, 7, 0, 44, 49, 566, DateTimeKind.Utc).AddTicks(7580)
                        },
                        new
                        {
                            Id = new Guid("a9304f5f-0b24-4cd1-ade6-42c72606e53c"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictId = new Guid("6f6c792e-eda8-44b4-acc3-7cafa6753700"),
                            SchoolId = new Guid("f226e0ad-af8d-4dc7-bc71-517dfd3752a5"),
                            StartDate = new DateTime(2019, 3, 7, 0, 44, 49, 566, DateTimeKind.Utc).AddTicks(7588)
                        },
                        new
                        {
                            Id = new Guid("0454cb94-67d9-4595-ba1b-ef74c78ca84a"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictId = new Guid("6f6c792e-eda8-44b4-acc3-7cafa6753700"),
                            SchoolId = new Guid("b17919e5-9077-4379-a7c7-7d79a93a6179"),
                            StartDate = new DateTime(2019, 3, 7, 0, 44, 49, 566, DateTimeKind.Utc).AddTicks(7598)
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("role","security");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b8acc42-896b-4637-83b8-e153d647a974"),
                            DateCreated = new DateTime(2019, 3, 7, 0, 44, 49, 564, DateTimeKind.Utc).AddTicks(9373),
                            Description = "Total access to all other roles",
                            IsActive = true,
                            Name = "System Administrator"
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created");

                    b.Property<DateTime>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_modified");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("team","security");
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.TeamRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_created");

                    b.Property<Guid>("RoleId")
                        .HasColumnName("role_id");

                    b.Property<Guid>("TeamId")
                        .HasColumnName("team_id");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("TeamId");

                    b.ToTable("team_role","security");
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.TeamUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_created");

                    b.Property<Guid>("TeamId")
                        .HasColumnName("team_id");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("team_user","security");
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnName("email_address")
                        .HasMaxLength(150);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnName("middle_name")
                        .HasMaxLength(50);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnName("password_salt");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("user_name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("user","security");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2f09d6c4-424c-4333-be6c-d0510e3bd51a"),
                            DateCreated = new DateTime(2019, 3, 7, 0, 44, 49, 568, DateTimeKind.Utc).AddTicks(124),
                            EmailAddress = "auser1@email.com",
                            FirstName = "A",
                            IsActive = true,
                            LastName = "User1",
                            MiddleName = "A",
                            UserName = "auser1"
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_created");

                    b.Property<Guid>("RoleId")
                        .HasColumnName("role_id");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("user_role","security");
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.SchoolData.Models.School", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("school","schooldata");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e2bf738c-c3e1-4b3f-bb5e-e9b39916a101"),
                            Name = "Austintown Fitch High School"
                        },
                        new
                        {
                            Id = new Guid("add594cf-b745-485a-ac80-54a6dc50d5d1"),
                            Name = "Bloomfield Middle/High School"
                        },
                        new
                        {
                            Id = new Guid("f95acc0c-78c7-4a2a-8dcb-da5a40ac1041"),
                            Name = "Bristol Elementary"
                        },
                        new
                        {
                            Id = new Guid("6c9536d4-a77d-450e-aeef-8f3d1936d59f"),
                            Name = "Bristol Middle & High School"
                        },
                        new
                        {
                            Id = new Guid("1d580cde-3263-493f-be4b-760de01713e6"),
                            Name = "Brookfield Elementary School"
                        },
                        new
                        {
                            Id = new Guid("012bc14a-396e-4074-b1a3-1b4d027fd53e"),
                            Name = "Brookfield Middle School"
                        },
                        new
                        {
                            Id = new Guid("4b8bee85-3673-4ee6-8f2e-f5535f5f04ca"),
                            Name = "Brookfield High School"
                        },
                        new
                        {
                            Id = new Guid("b821dc6f-0c54-43c4-beaf-823df2afedab"),
                            Name = "Canfield High School"
                        },
                        new
                        {
                            Id = new Guid("eb5f060c-6df2-4eb2-b9a5-5acf85b02088"),
                            Name = "Central Elementary"
                        },
                        new
                        {
                            Id = new Guid("e6f5652d-30c9-4e5d-975c-f63dbe97ed7b"),
                            Name = "Champion High School"
                        },
                        new
                        {
                            Id = new Guid("4c402f06-7e83-454d-9c57-286de97816f9"),
                            Name = "Champion Middle School"
                        },
                        new
                        {
                            Id = new Guid("b7c65e6a-5581-4ce9-b8d6-dddf4aff0552"),
                            Name = "Girard High School"
                        },
                        new
                        {
                            Id = new Guid("81aa83c9-a7b5-4993-b896-a017ef4e64a9"),
                            Name = "Girard Intermediate"
                        },
                        new
                        {
                            Id = new Guid("f226e0ad-af8d-4dc7-bc71-517dfd3752a5"),
                            Name = "Girard Junior High School"
                        },
                        new
                        {
                            Id = new Guid("d1004426-cbe3-4b82-bbe5-ff054065f290"),
                            Name = "Glen Primary School"
                        },
                        new
                        {
                            Id = new Guid("552c37e8-d58e-4bd9-bbe5-84904b93c1b4"),
                            Name = "H.C. Mines Elementary"
                        },
                        new
                        {
                            Id = new Guid("f769f34d-81c0-4f72-9f1e-7604f2754dce"),
                            Name = "Howland High School"
                        },
                        new
                        {
                            Id = new Guid("b996f4c2-58ee-49e2-b9b8-ab185c616222"),
                            Name = "Howland Middle School"
                        },
                        new
                        {
                            Id = new Guid("c868b914-de91-4fe0-b2df-acc76573094a"),
                            Name = "Liberty High School"
                        },
                        new
                        {
                            Id = new Guid("cbc08341-7a0d-4acf-a5e7-6960c68b813b"),
                            Name = "Mesopatamia Elementary"
                        },
                        new
                        {
                            Id = new Guid("11671033-1aa8-4ac8-9ed0-2a0a4878047a"),
                            Name = "North Road Intermediate"
                        },
                        new
                        {
                            Id = new Guid("b17919e5-9077-4379-a7c7-7d79a93a6179"),
                            Name = "Prospect Elementary"
                        },
                        new
                        {
                            Id = new Guid("149fc309-51e7-4fd0-bc28-076373e400f0"),
                            Name = "Springs Primary School"
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.SchoolData.Models.SchoolStudent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnName("date_created");

                    b.Property<string>("GradeLevel")
                        .IsRequired()
                        .HasColumnName("grade_level");

                    b.Property<DateTime>("RegistrationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("registration_date");

                    b.Property<Guid>("SchoolId")
                        .HasColumnName("school_id");

                    b.Property<Guid>("StudentId")
                        .HasColumnName("student_id");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.HasIndex("StudentId");

                    b.ToTable("school_student","schooldata");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eee0f271-a2a7-473e-88eb-cb0a6bae05db"),
                            DateCreated = new DateTime(2019, 3, 7, 0, 44, 49, 567, DateTimeKind.Utc).AddTicks(4752),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 7, 0, 44, 49, 567, DateTimeKind.Utc).AddTicks(6168),
                            SchoolId = new Guid("e2bf738c-c3e1-4b3f-bb5e-e9b39916a101"),
                            StudentId = new Guid("1b254eff-dc80-4908-a0f9-d1e4ea092e42")
                        },
                        new
                        {
                            Id = new Guid("ff543df7-139a-4c02-8d25-f2103e076afa"),
                            DateCreated = new DateTime(2019, 3, 7, 0, 44, 49, 567, DateTimeKind.Utc).AddTicks(8802),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 7, 0, 44, 49, 567, DateTimeKind.Utc).AddTicks(8823),
                            SchoolId = new Guid("add594cf-b745-485a-ac80-54a6dc50d5d1"),
                            StudentId = new Guid("93299e96-c240-4c64-89c5-3734edd8e0ce")
                        },
                        new
                        {
                            Id = new Guid("7bd896b1-709e-493b-afca-f69aa11a53f1"),
                            DateCreated = new DateTime(2019, 3, 7, 0, 44, 49, 567, DateTimeKind.Utc).AddTicks(8846),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 7, 0, 44, 49, 567, DateTimeKind.Utc).AddTicks(8848),
                            SchoolId = new Guid("add594cf-b745-485a-ac80-54a6dc50d5d1"),
                            StudentId = new Guid("cc051008-6703-4e00-b096-88f70e7309eb")
                        },
                        new
                        {
                            Id = new Guid("014772bd-8e4b-4837-a057-53918472ff97"),
                            DateCreated = new DateTime(2019, 3, 7, 0, 44, 49, 567, DateTimeKind.Utc).AddTicks(8852),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 7, 0, 44, 49, 567, DateTimeKind.Utc).AddTicks(8854),
                            SchoolId = new Guid("b7c65e6a-5581-4ce9-b8d6-dddf4aff0552"),
                            StudentId = new Guid("1010d7a6-a45f-410b-9a39-9eb01123de24")
                        },
                        new
                        {
                            Id = new Guid("4674f7e6-3c8c-4185-8452-bcc55882011a"),
                            DateCreated = new DateTime(2019, 3, 7, 0, 44, 49, 567, DateTimeKind.Utc).AddTicks(8859),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 7, 0, 44, 49, 567, DateTimeKind.Utc).AddTicks(8861),
                            SchoolId = new Guid("b7c65e6a-5581-4ce9-b8d6-dddf4aff0552"),
                            StudentId = new Guid("13bc301d-929a-43c8-893f-a939abbbf145")
                        },
                        new
                        {
                            Id = new Guid("53939f7f-729a-416d-9483-8ea9d5e26f52"),
                            DateCreated = new DateTime(2019, 3, 7, 0, 44, 49, 567, DateTimeKind.Utc).AddTicks(8867),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 7, 0, 44, 49, 567, DateTimeKind.Utc).AddTicks(8868),
                            SchoolId = new Guid("b7c65e6a-5581-4ce9-b8d6-dddf4aff0552"),
                            StudentId = new Guid("975199a3-a6fd-487c-8687-2248c1989b0b")
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.SchoolData.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("birth_date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasMaxLength(60);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasMaxLength(60);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnName("middle_name")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("student","schooldata");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1b254eff-dc80-4908-a0f9-d1e4ea092e42"),
                            BirthDate = new DateTime(2005, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Abott",
                            MiddleName = "Alfred"
                        },
                        new
                        {
                            Id = new Guid("93299e96-c240-4c64-89c5-3734edd8e0ce"),
                            BirthDate = new DateTime(2005, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ann",
                            LastName = "Smith",
                            MiddleName = "Grace"
                        },
                        new
                        {
                            Id = new Guid("cc051008-6703-4e00-b096-88f70e7309eb"),
                            BirthDate = new DateTime(2004, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bill",
                            LastName = "Kriter",
                            MiddleName = "Anthony"
                        },
                        new
                        {
                            Id = new Guid("1010d7a6-a45f-410b-9a39-9eb01123de24"),
                            BirthDate = new DateTime(2005, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sara",
                            LastName = "Carter",
                            MiddleName = "Lynn"
                        },
                        new
                        {
                            Id = new Guid("13bc301d-929a-43c8-893f-a939abbbf145"),
                            BirthDate = new DateTime(2006, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Timkin",
                            MiddleName = "Dudley"
                        },
                        new
                        {
                            Id = new Guid("975199a3-a6fd-487c-8687-2248c1989b0b"),
                            BirthDate = new DateTime(2006, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Abby",
                            LastName = "Smart",
                            MiddleName = "Darla"
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.SchoolData.DistrictSchool", b =>
                {
                    b.HasOne("SchoolMachine.DataAccess.Entities.Models.SchoolData.District", "District")
                        .WithMany("Districts")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SchoolMachine.DataAccess.Entities.SchoolData.Models.School", "School")
                        .WithMany("Districts")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.TeamRole", b =>
                {
                    b.HasOne("SchoolMachine.DataAccess.Entities.Models.Security.Role", "Role")
                        .WithMany("Teams")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SchoolMachine.DataAccess.Entities.Models.Security.Team", "Team")
                        .WithMany("Roles")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.TeamUser", b =>
                {
                    b.HasOne("SchoolMachine.DataAccess.Entities.Models.Security.Team", "Team")
                        .WithMany("Users")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SchoolMachine.DataAccess.Entities.Models.Security.User", "User")
                        .WithMany("Teams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.UserRole", b =>
                {
                    b.HasOne("SchoolMachine.DataAccess.Entities.Models.Security.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SchoolMachine.DataAccess.Entities.Models.Security.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.SchoolData.Models.SchoolStudent", b =>
                {
                    b.HasOne("SchoolMachine.DataAccess.Entities.SchoolData.Models.School", "School")
                        .WithMany("Students")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SchoolMachine.DataAccess.Entities.SchoolData.Models.Student", "Student")
                        .WithMany("Schools")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
