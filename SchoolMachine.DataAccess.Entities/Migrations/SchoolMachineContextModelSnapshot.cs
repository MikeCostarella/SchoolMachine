// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SchoolMachine.DataAccess.Entities;

namespace SchoolMachine.DataAccess.Entities.Migrations
{
    [DbContext(typeof(SchoolMachineContext))]
    partial class SchoolMachineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.SchoolData.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("district","schooldata");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8fc6579-e494-4411-99ab-f5fb439909b5"),
                            Name = "Austintown Local School District"
                        },
                        new
                        {
                            Id = new Guid("f5558c9d-31eb-40b0-b773-0e42e7da8651"),
                            Name = "Bloomfield-Mespo Local School District"
                        },
                        new
                        {
                            Id = new Guid("fec73575-6c3b-47bd-ae3d-2d734dfea065"),
                            Name = "Bristol Local School District"
                        },
                        new
                        {
                            Id = new Guid("ae223b5c-ce69-4d7e-a54b-663e88492b3a"),
                            Name = "Brookfield Local School District"
                        },
                        new
                        {
                            Id = new Guid("16581226-ce81-485a-b9d5-5206faa378cb"),
                            Name = "Champion Local School District"
                        },
                        new
                        {
                            Id = new Guid("4b824776-b8ac-42d3-bae6-5ff7f327c820"),
                            Name = "Girard City School District"
                        },
                        new
                        {
                            Id = new Guid("59cdfda0-4c73-4152-8932-c445b6bb2038"),
                            Name = "Howland Local School District"
                        },
                        new
                        {
                            Id = new Guid("10ca26bc-b7b8-4098-8f0c-daa5b3fbcb44"),
                            Name = "Hubbard Exempted Village School District"
                        },
                        new
                        {
                            Id = new Guid("27b328a9-6da6-47d2-bd6d-5e85f2932eb8"),
                            Name = "Joseph Badger Local School District"
                        },
                        new
                        {
                            Id = new Guid("29957dcd-5d63-4b13-a864-200668f64681"),
                            Name = "LaBrae Local School District"
                        },
                        new
                        {
                            Id = new Guid("4897cc7d-42d7-4b5e-a8ba-7de49223b516"),
                            Name = "Lakeview Local School District"
                        },
                        new
                        {
                            Id = new Guid("a347a369-07cb-4bd8-bc3d-97735d70b9cf"),
                            Name = "Liberty Local School District"
                        },
                        new
                        {
                            Id = new Guid("1b90fffb-e650-4926-91b2-35829652cbee"),
                            Name = "Lordstown Local School District"
                        },
                        new
                        {
                            Id = new Guid("5f9ad000-650d-4085-a83b-6182840e305a"),
                            Name = "Maplewood Local School District"
                        },
                        new
                        {
                            Id = new Guid("c9cc0282-7822-4642-9694-6e8746c31035"),
                            Name = "Mathews Local School District"
                        },
                        new
                        {
                            Id = new Guid("3211bf6c-c485-4980-94e4-8a4bf6dab8d6"),
                            Name = "McDonald Local School District"
                        },
                        new
                        {
                            Id = new Guid("d6eac52f-8ef9-48c1-b88c-501fb09e563a"),
                            Name = "Newton Falls Exempted Village School District"
                        },
                        new
                        {
                            Id = new Guid("8be82cb1-9441-4e8d-b30c-09237dba679a"),
                            Name = "Niles City School District"
                        },
                        new
                        {
                            Id = new Guid("25da421f-f3db-402a-b3f0-036c9a9e3b13"),
                            Name = "Southington Local School District"
                        },
                        new
                        {
                            Id = new Guid("61deae70-ff2a-484d-95cf-bb62f30f13bf"),
                            Name = "Trumbull Career & Technical Center"
                        },
                        new
                        {
                            Id = new Guid("1c161f87-77f9-4675-b21b-1709c1b4929b"),
                            Name = "Trumbull County Educational Service Center"
                        },
                        new
                        {
                            Id = new Guid("9104b325-a47a-478b-8d95-c8996b7d687b"),
                            Name = "Warren City School District"
                        },
                        new
                        {
                            Id = new Guid("2b67c814-1219-4305-ae33-1282fffa3a59"),
                            Name = "Weathersfield Local School District"
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.SchoolData.DistrictSchool", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnName("end_date");

                    b.Property<Guid>("SchoolDistrictId")
                        .HasColumnName("district_id");

                    b.Property<Guid>("SchoolId")
                        .HasColumnName("school_id");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("start_date");

                    b.HasKey("Id");

                    b.ToTable("district_school","schooldata");

                    b.HasData(
                        new
                        {
                            Id = new Guid("163a8e57-ad99-4ba6-aae7-55037bbff189"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("c8fc6579-e494-4411-99ab-f5fb439909b5"),
                            SchoolId = new Guid("d2fee5e8-ba1a-41a7-918f-68e43ee74c1d"),
                            StartDate = new DateTime(2019, 3, 6, 2, 25, 57, 486, DateTimeKind.Utc).AddTicks(7905)
                        },
                        new
                        {
                            Id = new Guid("623de670-d068-428d-bb15-7c3b81e650d6"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("f5558c9d-31eb-40b0-b773-0e42e7da8651"),
                            SchoolId = new Guid("1607c072-1239-4cb3-8815-a02e066ace85"),
                            StartDate = new DateTime(2019, 3, 6, 2, 25, 57, 487, DateTimeKind.Utc).AddTicks(891)
                        },
                        new
                        {
                            Id = new Guid("ab19bdd6-c18c-456f-bbb1-5fc942f7313c"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("f5558c9d-31eb-40b0-b773-0e42e7da8651"),
                            SchoolId = new Guid("01567500-88e8-4fa6-8bdc-879886992a58"),
                            StartDate = new DateTime(2019, 3, 6, 2, 25, 57, 487, DateTimeKind.Utc).AddTicks(915)
                        },
                        new
                        {
                            Id = new Guid("cccb9a69-7e47-43c3-b58a-95c7e12b840d"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("fec73575-6c3b-47bd-ae3d-2d734dfea065"),
                            SchoolId = new Guid("3b54eeb1-45fa-48d9-b0e9-ad821fe0d681"),
                            StartDate = new DateTime(2019, 3, 6, 2, 25, 57, 487, DateTimeKind.Utc).AddTicks(931)
                        },
                        new
                        {
                            Id = new Guid("ae3eac8c-6f1b-410a-a7da-631a6aaeb0ee"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("fec73575-6c3b-47bd-ae3d-2d734dfea065"),
                            SchoolId = new Guid("f6f4bbf8-1267-4b56-ac8c-4cbf8f5772d7"),
                            StartDate = new DateTime(2019, 3, 6, 2, 25, 57, 487, DateTimeKind.Utc).AddTicks(952)
                        },
                        new
                        {
                            Id = new Guid("4c5f57dc-33a4-4bfc-b60b-0c27cd373f04"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("ae223b5c-ce69-4d7e-a54b-663e88492b3a"),
                            SchoolId = new Guid("256455db-2b76-41e7-a100-7b125a54f0ae"),
                            StartDate = new DateTime(2019, 3, 6, 2, 25, 57, 487, DateTimeKind.Utc).AddTicks(971)
                        },
                        new
                        {
                            Id = new Guid("96749bf1-08b1-49c6-b0e6-e6130340c134"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("ae223b5c-ce69-4d7e-a54b-663e88492b3a"),
                            SchoolId = new Guid("559ebcd9-c37f-4ed5-ab3d-18a0ca104115"),
                            StartDate = new DateTime(2019, 3, 6, 2, 25, 57, 487, DateTimeKind.Utc).AddTicks(984)
                        },
                        new
                        {
                            Id = new Guid("304990a5-e81f-4aa6-a5b6-a6b58dbc1018"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("ae223b5c-ce69-4d7e-a54b-663e88492b3a"),
                            SchoolId = new Guid("a4a97876-7a5e-4d3c-bf2b-90365ad91933"),
                            StartDate = new DateTime(2019, 3, 6, 2, 25, 57, 487, DateTimeKind.Utc).AddTicks(996)
                        },
                        new
                        {
                            Id = new Guid("2640aa01-8495-44ce-b5e2-82b5d1a586a0"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("16581226-ce81-485a-b9d5-5206faa378cb"),
                            SchoolId = new Guid("326543e7-c44d-4fb0-b8a9-5c8a4e39948a"),
                            StartDate = new DateTime(2019, 3, 6, 2, 25, 57, 487, DateTimeKind.Utc).AddTicks(1010)
                        },
                        new
                        {
                            Id = new Guid("f25d7df0-1bf5-42e5-b026-939b3878e3a8"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("16581226-ce81-485a-b9d5-5206faa378cb"),
                            SchoolId = new Guid("34b36d71-d675-4aa7-ae4e-7ad1ed927079"),
                            StartDate = new DateTime(2019, 3, 6, 2, 25, 57, 487, DateTimeKind.Utc).AddTicks(1025)
                        },
                        new
                        {
                            Id = new Guid("67864c95-8bef-4685-980d-7b11a644b58f"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("16581226-ce81-485a-b9d5-5206faa378cb"),
                            SchoolId = new Guid("24df0003-1c8f-4e37-9eff-c15fad7bde9e"),
                            StartDate = new DateTime(2019, 3, 6, 2, 25, 57, 487, DateTimeKind.Utc).AddTicks(1039)
                        },
                        new
                        {
                            Id = new Guid("d5ffec95-e5f8-4a67-a84c-5274bb09c9a7"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("4b824776-b8ac-42d3-bae6-5ff7f327c820"),
                            SchoolId = new Guid("cd675587-e635-43c1-a687-8d1aac5bc486"),
                            StartDate = new DateTime(2019, 3, 6, 2, 25, 57, 487, DateTimeKind.Utc).AddTicks(1061)
                        },
                        new
                        {
                            Id = new Guid("6129b260-e73d-46f6-95df-77366307f3d8"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("4b824776-b8ac-42d3-bae6-5ff7f327c820"),
                            SchoolId = new Guid("95b82ac5-e02a-4cf0-9697-d358e8824461"),
                            StartDate = new DateTime(2019, 3, 6, 2, 25, 57, 487, DateTimeKind.Utc).AddTicks(1433)
                        },
                        new
                        {
                            Id = new Guid("59b61399-9f3b-4473-a087-9251b7dabaa4"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("4b824776-b8ac-42d3-bae6-5ff7f327c820"),
                            SchoolId = new Guid("9c8e0b6b-3e1a-43fd-9f8f-78650c9c2721"),
                            StartDate = new DateTime(2019, 3, 6, 2, 25, 57, 487, DateTimeKind.Utc).AddTicks(1701)
                        },
                        new
                        {
                            Id = new Guid("90d74afe-d12c-40dc-b509-f8fe1ed8386f"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("4b824776-b8ac-42d3-bae6-5ff7f327c820"),
                            SchoolId = new Guid("28947f13-714a-4632-b37f-15e7998ef5b6"),
                            StartDate = new DateTime(2019, 3, 6, 2, 25, 57, 487, DateTimeKind.Utc).AddTicks(1724)
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("role","security");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e8b8103-d18e-46e5-92a2-209474a5579f"),
                            DateCreated = new DateTime(2019, 3, 6, 2, 25, 57, 484, DateTimeKind.Utc).AddTicks(7594),
                            Description = "Total access to all other roles",
                            IsActive = true,
                            Name = "System Administrator"
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created");

                    b.Property<DateTime>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_modified");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("team","security");
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.TeamRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_created");

                    b.Property<Guid>("RoleId")
                        .HasColumnName("role_id");

                    b.Property<Guid>("TeamId")
                        .HasColumnName("team_id");

                    b.HasKey("Id");

                    b.ToTable("team_role","security");
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.TeamUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_created");

                    b.Property<Guid>("TeamId")
                        .HasColumnName("team_id");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("team_user","security");
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnName("email_address")
                        .HasMaxLength(150);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnName("middle_name")
                        .HasMaxLength(50);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnName("password_salt");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("user_name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("user","security");

                    b.HasData(
                        new
                        {
                            Id = new Guid("73364710-53ce-48d0-bd89-621abd0aedea"),
                            DateCreated = new DateTime(2019, 3, 6, 2, 25, 57, 488, DateTimeKind.Utc).AddTicks(7380),
                            EmailAddress = "auser1@email.com",
                            FirstName = "A",
                            IsActive = true,
                            LastName = "User1",
                            MiddleName = "A",
                            UserName = "auser1"
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_created");

                    b.Property<Guid>("RoleId")
                        .HasColumnName("role_id");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("user_role","security");
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.SchoolData.Models.School", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("school","schooldata");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2fee5e8-ba1a-41a7-918f-68e43ee74c1d"),
                            Name = "Austintown Fitch High School"
                        },
                        new
                        {
                            Id = new Guid("1607c072-1239-4cb3-8815-a02e066ace85"),
                            Name = "Bloomfield Middle/High School"
                        },
                        new
                        {
                            Id = new Guid("3b54eeb1-45fa-48d9-b0e9-ad821fe0d681"),
                            Name = "Bristol Elementary"
                        },
                        new
                        {
                            Id = new Guid("f6f4bbf8-1267-4b56-ac8c-4cbf8f5772d7"),
                            Name = "Bristol Middle & High School"
                        },
                        new
                        {
                            Id = new Guid("256455db-2b76-41e7-a100-7b125a54f0ae"),
                            Name = "Brookfield Elementary School"
                        },
                        new
                        {
                            Id = new Guid("559ebcd9-c37f-4ed5-ab3d-18a0ca104115"),
                            Name = "Brookfield Middle School"
                        },
                        new
                        {
                            Id = new Guid("a4a97876-7a5e-4d3c-bf2b-90365ad91933"),
                            Name = "Brookfield High School"
                        },
                        new
                        {
                            Id = new Guid("0d5c4e84-d8b9-44ab-a230-0fa0dbe77a68"),
                            Name = "Canfield High School"
                        },
                        new
                        {
                            Id = new Guid("326543e7-c44d-4fb0-b8a9-5c8a4e39948a"),
                            Name = "Central Elementary"
                        },
                        new
                        {
                            Id = new Guid("34b36d71-d675-4aa7-ae4e-7ad1ed927079"),
                            Name = "Champion High School"
                        },
                        new
                        {
                            Id = new Guid("24df0003-1c8f-4e37-9eff-c15fad7bde9e"),
                            Name = "Champion Middle School"
                        },
                        new
                        {
                            Id = new Guid("cd675587-e635-43c1-a687-8d1aac5bc486"),
                            Name = "Girard High School"
                        },
                        new
                        {
                            Id = new Guid("95b82ac5-e02a-4cf0-9697-d358e8824461"),
                            Name = "Girard Intermediate"
                        },
                        new
                        {
                            Id = new Guid("9c8e0b6b-3e1a-43fd-9f8f-78650c9c2721"),
                            Name = "Girard Junior High School"
                        },
                        new
                        {
                            Id = new Guid("c35d9c52-798a-41d0-b07b-77a44b92a425"),
                            Name = "Liberty High School"
                        },
                        new
                        {
                            Id = new Guid("01567500-88e8-4fa6-8bdc-879886992a58"),
                            Name = "Mesopatamia Elementary"
                        },
                        new
                        {
                            Id = new Guid("28947f13-714a-4632-b37f-15e7998ef5b6"),
                            Name = "Prospect Elementary"
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.SchoolData.Models.SchoolStudent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnName("date_created");

                    b.Property<string>("GradeLevel")
                        .IsRequired()
                        .HasColumnName("grade_level");

                    b.Property<DateTime>("RegistrationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("registration_date");

                    b.Property<Guid>("SchoolId")
                        .HasColumnName("school_id");

                    b.Property<Guid>("StudentId")
                        .HasColumnName("student_id");

                    b.HasKey("Id");

                    b.ToTable("school_student","schooldata");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c053dea-70be-46ff-b2f0-b123eff04f09"),
                            DateCreated = new DateTime(2019, 3, 6, 2, 25, 57, 488, DateTimeKind.Utc).AddTicks(2097),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 6, 2, 25, 57, 488, DateTimeKind.Utc).AddTicks(4157),
                            SchoolId = new Guid("d2fee5e8-ba1a-41a7-918f-68e43ee74c1d"),
                            StudentId = new Guid("4e069b58-747c-4172-ad76-4509bfa88e52")
                        },
                        new
                        {
                            Id = new Guid("3ad06bdc-6141-4ebc-9df5-e73615ec4b91"),
                            DateCreated = new DateTime(2019, 3, 6, 2, 25, 57, 488, DateTimeKind.Utc).AddTicks(6058),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 6, 2, 25, 57, 488, DateTimeKind.Utc).AddTicks(6082),
                            SchoolId = new Guid("1607c072-1239-4cb3-8815-a02e066ace85"),
                            StudentId = new Guid("ace50818-c996-4370-a261-71e054db2aa4")
                        },
                        new
                        {
                            Id = new Guid("2cda2e27-abbc-47c9-9833-b37bde3fb8b7"),
                            DateCreated = new DateTime(2019, 3, 6, 2, 25, 57, 488, DateTimeKind.Utc).AddTicks(6106),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 6, 2, 25, 57, 488, DateTimeKind.Utc).AddTicks(6108),
                            SchoolId = new Guid("1607c072-1239-4cb3-8815-a02e066ace85"),
                            StudentId = new Guid("d709c06b-1f38-486e-86f1-18618db08644")
                        },
                        new
                        {
                            Id = new Guid("6f2d2d82-cb22-4e6e-b2de-c75fc28b933d"),
                            DateCreated = new DateTime(2019, 3, 6, 2, 25, 57, 488, DateTimeKind.Utc).AddTicks(6113),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 6, 2, 25, 57, 488, DateTimeKind.Utc).AddTicks(6114),
                            SchoolId = new Guid("cd675587-e635-43c1-a687-8d1aac5bc486"),
                            StudentId = new Guid("58a0bad2-ce5f-475d-9411-c178dfd2c8a0")
                        },
                        new
                        {
                            Id = new Guid("bcbb2ef2-ec31-4859-a527-f919b6a177fe"),
                            DateCreated = new DateTime(2019, 3, 6, 2, 25, 57, 488, DateTimeKind.Utc).AddTicks(6119),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 6, 2, 25, 57, 488, DateTimeKind.Utc).AddTicks(6120),
                            SchoolId = new Guid("cd675587-e635-43c1-a687-8d1aac5bc486"),
                            StudentId = new Guid("d2c9f9da-2cd2-410d-a02b-5519f0319ecd")
                        },
                        new
                        {
                            Id = new Guid("0ebb7454-7172-431f-baa4-cfa4aa7fc21c"),
                            DateCreated = new DateTime(2019, 3, 6, 2, 25, 57, 488, DateTimeKind.Utc).AddTicks(6126),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 6, 2, 25, 57, 488, DateTimeKind.Utc).AddTicks(6127),
                            SchoolId = new Guid("cd675587-e635-43c1-a687-8d1aac5bc486"),
                            StudentId = new Guid("ccabdf1c-f90f-48fa-badf-3ffc1bcbe86f")
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.SchoolData.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("birth_date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasMaxLength(60);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasMaxLength(60);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnName("middle_name")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("student","schooldata");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4e069b58-747c-4172-ad76-4509bfa88e52"),
                            BirthDate = new DateTime(2005, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Abott",
                            MiddleName = "Alfred"
                        },
                        new
                        {
                            Id = new Guid("ace50818-c996-4370-a261-71e054db2aa4"),
                            BirthDate = new DateTime(2005, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ann",
                            LastName = "Smith",
                            MiddleName = "Grace"
                        },
                        new
                        {
                            Id = new Guid("d709c06b-1f38-486e-86f1-18618db08644"),
                            BirthDate = new DateTime(2004, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bill",
                            LastName = "Kriter",
                            MiddleName = "Anthony"
                        },
                        new
                        {
                            Id = new Guid("58a0bad2-ce5f-475d-9411-c178dfd2c8a0"),
                            BirthDate = new DateTime(2005, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sara",
                            LastName = "Carter",
                            MiddleName = "Lynn"
                        },
                        new
                        {
                            Id = new Guid("d2c9f9da-2cd2-410d-a02b-5519f0319ecd"),
                            BirthDate = new DateTime(2006, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Timkin",
                            MiddleName = "Dudley"
                        },
                        new
                        {
                            Id = new Guid("ccabdf1c-f90f-48fa-badf-3ffc1bcbe86f"),
                            BirthDate = new DateTime(2006, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Abby",
                            LastName = "Smart",
                            MiddleName = "Darla"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
