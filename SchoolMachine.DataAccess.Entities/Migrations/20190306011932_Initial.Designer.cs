// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SchoolMachine.DataAccess.Entities;

namespace SchoolMachine.DataAccess.Entities.Migrations
{
    [DbContext(typeof(SchoolMachineContext))]
    [Migration("20190306011932_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.SchoolData.SchoolDistrict", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("school_district_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("school_districts","school_data");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c30ffa47-a9d2-4309-a278-81740776632d"),
                            Name = "Austintown Local School District"
                        },
                        new
                        {
                            Id = new Guid("075c477b-9071-40c5-88e3-a2ee9b089357"),
                            Name = "Bloomfield-Mespo Local School District"
                        },
                        new
                        {
                            Id = new Guid("c6c93c34-44cf-4928-9626-b94ff0f9c858"),
                            Name = "Bristol Local School District"
                        },
                        new
                        {
                            Id = new Guid("b5b74604-3695-4040-9a51-001af3e9b4d0"),
                            Name = "Brookfield Local School District"
                        },
                        new
                        {
                            Id = new Guid("85acc9e8-f67e-4057-928e-afec9c657af0"),
                            Name = "Champion Local School District"
                        },
                        new
                        {
                            Id = new Guid("09a703c1-11ca-4605-a13f-bc4ad63849e6"),
                            Name = "Girard City School District"
                        },
                        new
                        {
                            Id = new Guid("1e596a59-0f18-45a2-887e-6fcb5b289f81"),
                            Name = "Howland Local School District"
                        },
                        new
                        {
                            Id = new Guid("27e3ca27-1844-4fdf-a37b-2e3d290ff100"),
                            Name = "Hubbard Exempted Village School District"
                        },
                        new
                        {
                            Id = new Guid("0bf90c6b-8bdb-4dfc-b21b-6ead84b02ca8"),
                            Name = "Joseph Badger Local School District"
                        },
                        new
                        {
                            Id = new Guid("6ed0793b-9315-4845-87f2-9fd68a748b0c"),
                            Name = "LaBrae Local School District"
                        },
                        new
                        {
                            Id = new Guid("1da88b73-a3cf-4804-878b-ebe6571c2279"),
                            Name = "Lakeview Local School District"
                        },
                        new
                        {
                            Id = new Guid("b9be5a3b-0603-4bb1-877f-99681042b8d0"),
                            Name = "Liberty Local School District"
                        },
                        new
                        {
                            Id = new Guid("8768a050-d704-4714-93b1-e0f2b11bc3ca"),
                            Name = "Lordstown Local School District"
                        },
                        new
                        {
                            Id = new Guid("6ddb33b6-578b-41cc-abf6-b5da2474a733"),
                            Name = "Maplewood Local School District"
                        },
                        new
                        {
                            Id = new Guid("ad8d6d36-dab5-4aec-a9f6-d72f53f775be"),
                            Name = "Mathews Local School District"
                        },
                        new
                        {
                            Id = new Guid("ee46a916-64d3-4a10-9806-e9a7f8c2f379"),
                            Name = "McDonald Local School District"
                        },
                        new
                        {
                            Id = new Guid("ebaf3241-a843-49bf-b9a5-5cd269fa305d"),
                            Name = "Newton Falls Exempted Village School District"
                        },
                        new
                        {
                            Id = new Guid("e944f4dd-2d76-4c6f-8fe0-bfe414f99f80"),
                            Name = "Niles City School District"
                        },
                        new
                        {
                            Id = new Guid("98df3102-afa5-426c-9236-23243e1f1c35"),
                            Name = "Southington Local School District"
                        },
                        new
                        {
                            Id = new Guid("363af5e2-f4ba-4153-8ac3-9e5a7119689f"),
                            Name = "Trumbull Career & Technical Center"
                        },
                        new
                        {
                            Id = new Guid("765d2f12-ef69-47f4-89a9-0940929e911a"),
                            Name = "Trumbull County Educational Service Center"
                        },
                        new
                        {
                            Id = new Guid("ea581fef-8be0-47f3-9231-f26992fda16a"),
                            Name = "Warren City School District"
                        },
                        new
                        {
                            Id = new Guid("ef1e35eb-5911-4951-a37a-3a1a6aaf3ccb"),
                            Name = "Weathersfield Local School District"
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.SchoolData.SchoolDistrictSchool", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("school_district_school_id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnName("end_date");

                    b.Property<Guid>("SchoolDistrictId")
                        .HasColumnName("school_district_id");

                    b.Property<Guid>("SchoolId")
                        .HasColumnName("school_id");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("start_date");

                    b.HasKey("Id");

                    b.ToTable("school_district_schools","school_data");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d2addbe-bdc4-44a3-8846-6eb3c02a63a0"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("c30ffa47-a9d2-4309-a278-81740776632d"),
                            SchoolId = new Guid("f705d344-40f6-4c4e-8fde-53a43219d429"),
                            StartDate = new DateTime(2019, 3, 6, 1, 19, 32, 106, DateTimeKind.Utc).AddTicks(6531)
                        },
                        new
                        {
                            Id = new Guid("4176a7b6-c7c5-44a9-8d2e-2735cf1d0fcc"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("075c477b-9071-40c5-88e3-a2ee9b089357"),
                            SchoolId = new Guid("0af946d3-8434-47f7-8cc4-3aa95559cb95"),
                            StartDate = new DateTime(2019, 3, 6, 1, 19, 32, 106, DateTimeKind.Utc).AddTicks(7119)
                        },
                        new
                        {
                            Id = new Guid("db59b01a-fd3b-44d4-922f-0ffc4c96b4cd"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("075c477b-9071-40c5-88e3-a2ee9b089357"),
                            SchoolId = new Guid("9675f5e0-5c83-453d-a7f8-b7378ce487f9"),
                            StartDate = new DateTime(2019, 3, 6, 1, 19, 32, 106, DateTimeKind.Utc).AddTicks(7132)
                        },
                        new
                        {
                            Id = new Guid("258d2c65-e074-4a57-a715-a99e904d1e26"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("c6c93c34-44cf-4928-9626-b94ff0f9c858"),
                            SchoolId = new Guid("31d66451-004d-4040-a204-1441e75bd390"),
                            StartDate = new DateTime(2019, 3, 6, 1, 19, 32, 106, DateTimeKind.Utc).AddTicks(7140)
                        },
                        new
                        {
                            Id = new Guid("d001a13b-a41b-46eb-abcc-3f41c2a7b1c0"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("c6c93c34-44cf-4928-9626-b94ff0f9c858"),
                            SchoolId = new Guid("a2fc0644-985b-4e22-a490-3b454ba60aae"),
                            StartDate = new DateTime(2019, 3, 6, 1, 19, 32, 106, DateTimeKind.Utc).AddTicks(7148)
                        },
                        new
                        {
                            Id = new Guid("5b30d296-9917-4684-97cd-c6b9865acecf"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("b5b74604-3695-4040-9a51-001af3e9b4d0"),
                            SchoolId = new Guid("52635373-9af5-455d-853e-699c9d82191f"),
                            StartDate = new DateTime(2019, 3, 6, 1, 19, 32, 106, DateTimeKind.Utc).AddTicks(7157)
                        },
                        new
                        {
                            Id = new Guid("ce611e15-1162-49c3-8722-1d39b9c24abb"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("b5b74604-3695-4040-9a51-001af3e9b4d0"),
                            SchoolId = new Guid("5ef2545c-80f3-4b2f-a45a-e8991935c8a7"),
                            StartDate = new DateTime(2019, 3, 6, 1, 19, 32, 106, DateTimeKind.Utc).AddTicks(7171)
                        },
                        new
                        {
                            Id = new Guid("8ce47e07-7da3-4cfb-8b72-97e271968fa5"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("b5b74604-3695-4040-9a51-001af3e9b4d0"),
                            SchoolId = new Guid("512c4c18-e28a-4c39-858b-797a1afd2bad"),
                            StartDate = new DateTime(2019, 3, 6, 1, 19, 32, 106, DateTimeKind.Utc).AddTicks(7178)
                        },
                        new
                        {
                            Id = new Guid("dfc0404c-f277-4d47-ad52-87ffc79fb868"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("85acc9e8-f67e-4057-928e-afec9c657af0"),
                            SchoolId = new Guid("d0a837e5-38e4-4ef4-a1d9-8b441c7b682f"),
                            StartDate = new DateTime(2019, 3, 6, 1, 19, 32, 106, DateTimeKind.Utc).AddTicks(7186)
                        },
                        new
                        {
                            Id = new Guid("56d62e64-500a-4d0d-8de7-4cf7d98a1e82"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("85acc9e8-f67e-4057-928e-afec9c657af0"),
                            SchoolId = new Guid("448930db-3d06-4f19-84a3-faf16d35c2ca"),
                            StartDate = new DateTime(2019, 3, 6, 1, 19, 32, 106, DateTimeKind.Utc).AddTicks(7195)
                        },
                        new
                        {
                            Id = new Guid("d26a1149-115f-4a74-a34d-39bf8191319c"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("85acc9e8-f67e-4057-928e-afec9c657af0"),
                            SchoolId = new Guid("2dc2e2c1-c080-42a8-ba82-cbcff2b6b194"),
                            StartDate = new DateTime(2019, 3, 6, 1, 19, 32, 106, DateTimeKind.Utc).AddTicks(7202)
                        },
                        new
                        {
                            Id = new Guid("e3c8ebbf-2914-41ab-9000-45a1fea66b6e"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("09a703c1-11ca-4605-a13f-bc4ad63849e6"),
                            SchoolId = new Guid("caf6455d-dc20-48a5-9411-f3cf08ccadcb"),
                            StartDate = new DateTime(2019, 3, 6, 1, 19, 32, 106, DateTimeKind.Utc).AddTicks(7210)
                        },
                        new
                        {
                            Id = new Guid("37039a01-f4bc-47ae-a5d8-7a6b6aaac755"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("09a703c1-11ca-4605-a13f-bc4ad63849e6"),
                            SchoolId = new Guid("8feadc58-cf0c-412c-8526-9eccf8589b09"),
                            StartDate = new DateTime(2019, 3, 6, 1, 19, 32, 106, DateTimeKind.Utc).AddTicks(7217)
                        },
                        new
                        {
                            Id = new Guid("89769907-4b32-4867-8788-198908d19e87"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("09a703c1-11ca-4605-a13f-bc4ad63849e6"),
                            SchoolId = new Guid("d9b8023f-cd9b-4291-a5a7-02b7e263ddef"),
                            StartDate = new DateTime(2019, 3, 6, 1, 19, 32, 106, DateTimeKind.Utc).AddTicks(7225)
                        },
                        new
                        {
                            Id = new Guid("23983a3d-897f-4eb4-a812-5bca21d869ee"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("09a703c1-11ca-4605-a13f-bc4ad63849e6"),
                            SchoolId = new Guid("ae266327-36a8-4b5f-a8fa-5bc83c68597a"),
                            StartDate = new DateTime(2019, 3, 6, 1, 19, 32, 106, DateTimeKind.Utc).AddTicks(7235)
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("role_id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("roles","security");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2bda5d47-a248-4b2c-9ae7-c751377da806"),
                            DateCreated = new DateTime(2019, 3, 6, 1, 19, 32, 105, DateTimeKind.Utc).AddTicks(1490),
                            Description = "Total access to all other roles",
                            IsActive = true,
                            Name = "System Administrator"
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("team_id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created");

                    b.Property<DateTime>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_modified");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("teams","security");
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.TeamRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("team_role_id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_created");

                    b.Property<Guid>("RoleId")
                        .HasColumnName("role_id");

                    b.Property<Guid>("TeamId")
                        .HasColumnName("team_id");

                    b.HasKey("Id");

                    b.ToTable("team_roles","security");
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.TeamUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("team_user_id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_created");

                    b.Property<Guid>("TeamId")
                        .HasColumnName("team_id");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("team_users","security");
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("user_id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnName("email_address")
                        .HasMaxLength(150);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnName("middle_name")
                        .HasMaxLength(50);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnName("password_salt");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("user_name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("users","security");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a494b37d-2b84-4a70-b5f8-cf9217e475a4"),
                            DateCreated = new DateTime(2019, 3, 6, 1, 19, 32, 107, DateTimeKind.Utc).AddTicks(8234),
                            EmailAddress = "auser1@email.com",
                            FirstName = "A",
                            IsActive = true,
                            LastName = "User1",
                            MiddleName = "A",
                            UserName = "auser1"
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("user_role_id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_created");

                    b.Property<Guid>("RoleId")
                        .HasColumnName("role_id");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("user_roles","security");
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.SchoolData.Models.School", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("school_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("schools","school_data");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f705d344-40f6-4c4e-8fde-53a43219d429"),
                            Name = "Austintown Fitch High School"
                        },
                        new
                        {
                            Id = new Guid("0af946d3-8434-47f7-8cc4-3aa95559cb95"),
                            Name = "Bloomfield Middle/High School"
                        },
                        new
                        {
                            Id = new Guid("31d66451-004d-4040-a204-1441e75bd390"),
                            Name = "Bristol Elementary"
                        },
                        new
                        {
                            Id = new Guid("a2fc0644-985b-4e22-a490-3b454ba60aae"),
                            Name = "Bristol Middle & High School"
                        },
                        new
                        {
                            Id = new Guid("52635373-9af5-455d-853e-699c9d82191f"),
                            Name = "Brookfield Elementary School"
                        },
                        new
                        {
                            Id = new Guid("5ef2545c-80f3-4b2f-a45a-e8991935c8a7"),
                            Name = "Brookfield Middle School"
                        },
                        new
                        {
                            Id = new Guid("512c4c18-e28a-4c39-858b-797a1afd2bad"),
                            Name = "Brookfield High School"
                        },
                        new
                        {
                            Id = new Guid("e0358b6b-0c6d-410e-93a7-089c58a60c28"),
                            Name = "Canfield High School"
                        },
                        new
                        {
                            Id = new Guid("d0a837e5-38e4-4ef4-a1d9-8b441c7b682f"),
                            Name = "Central Elementary"
                        },
                        new
                        {
                            Id = new Guid("448930db-3d06-4f19-84a3-faf16d35c2ca"),
                            Name = "Champion High School"
                        },
                        new
                        {
                            Id = new Guid("2dc2e2c1-c080-42a8-ba82-cbcff2b6b194"),
                            Name = "Champion Middle School"
                        },
                        new
                        {
                            Id = new Guid("caf6455d-dc20-48a5-9411-f3cf08ccadcb"),
                            Name = "Girard High School"
                        },
                        new
                        {
                            Id = new Guid("8feadc58-cf0c-412c-8526-9eccf8589b09"),
                            Name = "Girard Intermediate"
                        },
                        new
                        {
                            Id = new Guid("d9b8023f-cd9b-4291-a5a7-02b7e263ddef"),
                            Name = "Girard Junior High School"
                        },
                        new
                        {
                            Id = new Guid("25b17c15-33d6-4dbc-bd53-00af1148028a"),
                            Name = "Liberty High School"
                        },
                        new
                        {
                            Id = new Guid("9675f5e0-5c83-453d-a7f8-b7378ce487f9"),
                            Name = "Mesopatamia Elementary"
                        },
                        new
                        {
                            Id = new Guid("ae266327-36a8-4b5f-a8fa-5bc83c68597a"),
                            Name = "Prospect Elementary"
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.SchoolData.Models.SchoolStudent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("school_student_id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnName("date_created");

                    b.Property<string>("GradeLevel")
                        .IsRequired()
                        .HasColumnName("grade_level");

                    b.Property<DateTime>("RegistrationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("registration_date");

                    b.Property<Guid>("SchoolId")
                        .HasColumnName("school_id");

                    b.Property<Guid>("StudentId")
                        .HasColumnName("student_id");

                    b.HasKey("Id");

                    b.ToTable("school_students","school_data");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af64558e-8e54-40ea-aaea-b2a5df8b9efe"),
                            DateCreated = new DateTime(2019, 3, 6, 1, 19, 32, 107, DateTimeKind.Utc).AddTicks(3731),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 6, 1, 19, 32, 107, DateTimeKind.Utc).AddTicks(5107),
                            SchoolId = new Guid("f705d344-40f6-4c4e-8fde-53a43219d429"),
                            StudentId = new Guid("2ad7fafa-2bfe-4af7-9b93-e6a5a22c6737")
                        },
                        new
                        {
                            Id = new Guid("c2a8e642-c91a-4599-8220-4effda85eff8"),
                            DateCreated = new DateTime(2019, 3, 6, 1, 19, 32, 107, DateTimeKind.Utc).AddTicks(6964),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 6, 1, 19, 32, 107, DateTimeKind.Utc).AddTicks(6984),
                            SchoolId = new Guid("0af946d3-8434-47f7-8cc4-3aa95559cb95"),
                            StudentId = new Guid("59bceede-01b9-4019-bcb0-7592b8d62b16")
                        },
                        new
                        {
                            Id = new Guid("12bd5771-e4b9-49fd-93ba-fc39fdb55d93"),
                            DateCreated = new DateTime(2019, 3, 6, 1, 19, 32, 107, DateTimeKind.Utc).AddTicks(7007),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 6, 1, 19, 32, 107, DateTimeKind.Utc).AddTicks(7008),
                            SchoolId = new Guid("0af946d3-8434-47f7-8cc4-3aa95559cb95"),
                            StudentId = new Guid("ad80e71d-32e9-4813-bee1-54cb663e3fba")
                        },
                        new
                        {
                            Id = new Guid("e5f4ecef-a151-4da9-8ee2-731f0defc78d"),
                            DateCreated = new DateTime(2019, 3, 6, 1, 19, 32, 107, DateTimeKind.Utc).AddTicks(7013),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 6, 1, 19, 32, 107, DateTimeKind.Utc).AddTicks(7014),
                            SchoolId = new Guid("caf6455d-dc20-48a5-9411-f3cf08ccadcb"),
                            StudentId = new Guid("9fda4546-3010-4513-98cc-6fcd3fee8142")
                        },
                        new
                        {
                            Id = new Guid("35d2cc38-0328-4b39-b39c-0c495c077a30"),
                            DateCreated = new DateTime(2019, 3, 6, 1, 19, 32, 107, DateTimeKind.Utc).AddTicks(7018),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 6, 1, 19, 32, 107, DateTimeKind.Utc).AddTicks(7019),
                            SchoolId = new Guid("caf6455d-dc20-48a5-9411-f3cf08ccadcb"),
                            StudentId = new Guid("e0ad44ee-5e68-46e7-b896-4fd576ab0eb0")
                        },
                        new
                        {
                            Id = new Guid("f0991723-2a81-4643-aa92-af41d6644b09"),
                            DateCreated = new DateTime(2019, 3, 6, 1, 19, 32, 107, DateTimeKind.Utc).AddTicks(7025),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 6, 1, 19, 32, 107, DateTimeKind.Utc).AddTicks(7026),
                            SchoolId = new Guid("caf6455d-dc20-48a5-9411-f3cf08ccadcb"),
                            StudentId = new Guid("c142ce23-a170-4a82-ac7a-457c37383219")
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.SchoolData.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("student_id");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("birth_date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasMaxLength(60);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasMaxLength(60);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnName("middle_name")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("students","school_data");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2ad7fafa-2bfe-4af7-9b93-e6a5a22c6737"),
                            BirthDate = new DateTime(2005, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Abott",
                            MiddleName = "Alfred"
                        },
                        new
                        {
                            Id = new Guid("59bceede-01b9-4019-bcb0-7592b8d62b16"),
                            BirthDate = new DateTime(2005, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ann",
                            LastName = "Smith",
                            MiddleName = "Grace"
                        },
                        new
                        {
                            Id = new Guid("ad80e71d-32e9-4813-bee1-54cb663e3fba"),
                            BirthDate = new DateTime(2004, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bill",
                            LastName = "Kriter",
                            MiddleName = "Anthony"
                        },
                        new
                        {
                            Id = new Guid("9fda4546-3010-4513-98cc-6fcd3fee8142"),
                            BirthDate = new DateTime(2005, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sara",
                            LastName = "Carter",
                            MiddleName = "Lynn"
                        },
                        new
                        {
                            Id = new Guid("e0ad44ee-5e68-46e7-b896-4fd576ab0eb0"),
                            BirthDate = new DateTime(2006, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Timkin",
                            MiddleName = "Dudley"
                        },
                        new
                        {
                            Id = new Guid("c142ce23-a170-4a82-ac7a-457c37383219"),
                            BirthDate = new DateTime(2006, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Abby",
                            LastName = "Smart",
                            MiddleName = "Darla"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
