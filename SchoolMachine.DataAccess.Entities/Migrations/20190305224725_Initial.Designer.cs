// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SchoolMachine.DataAccess.Entities;

namespace SchoolMachine.DataAccess.Entities.Migrations
{
    [DbContext(typeof(SchoolMachineContext))]
    [Migration("20190305224725_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.SchoolData.SchoolDistrict", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SchoolDistrictId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("SchoolDistricts","SchoolData");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5c9cebdb-e269-4f86-9402-3528bf077152"),
                            Name = "Austintown Local School District"
                        },
                        new
                        {
                            Id = new Guid("27586934-ac84-4ba2-8fc1-c879c059c9dc"),
                            Name = "Bloomfield-Mespo Local School District"
                        },
                        new
                        {
                            Id = new Guid("32339fb9-6cf5-4bd5-b6f8-015cf10d0d93"),
                            Name = "Bristol Local School District"
                        },
                        new
                        {
                            Id = new Guid("2876ce59-30b2-44c9-91de-996bd2fb1bb4"),
                            Name = "Brookfield Local School District"
                        },
                        new
                        {
                            Id = new Guid("44279467-a91b-43ba-979c-96b11723b286"),
                            Name = "Champion Local School District"
                        },
                        new
                        {
                            Id = new Guid("603fdca0-91b4-4874-bef3-dd0791c0fa08"),
                            Name = "Girard City School District"
                        },
                        new
                        {
                            Id = new Guid("60cc072e-c8e6-452c-93c6-880d11650036"),
                            Name = "Howland Local School District"
                        },
                        new
                        {
                            Id = new Guid("39decac8-df26-4908-93ec-2ebe3a9aa303"),
                            Name = "Hubbard Exempted Village School District"
                        },
                        new
                        {
                            Id = new Guid("d282ef1c-4225-46bb-ac2f-2a473d186224"),
                            Name = "Joseph Badger Local School District"
                        },
                        new
                        {
                            Id = new Guid("581ace3d-2137-45e3-9bbe-d144606a7840"),
                            Name = "LaBrae Local School District"
                        },
                        new
                        {
                            Id = new Guid("a8bd5091-a38c-4ac7-b069-a830f473dd38"),
                            Name = "Lakeview Local School District"
                        },
                        new
                        {
                            Id = new Guid("691d4ae1-5156-492f-86ae-e0d276b0be98"),
                            Name = "Liberty Local School District"
                        },
                        new
                        {
                            Id = new Guid("af4fa26f-28f6-4573-83a6-5fae83c9ff89"),
                            Name = "Lordstown Local School District"
                        },
                        new
                        {
                            Id = new Guid("1a2b28b5-003a-4af1-bffa-247968df6228"),
                            Name = "Maplewood Local School District"
                        },
                        new
                        {
                            Id = new Guid("67a54fa6-0613-4457-a74b-e5decf02f134"),
                            Name = "Mathews Local School District"
                        },
                        new
                        {
                            Id = new Guid("3613fce1-1bc6-4883-97e9-4a723105c547"),
                            Name = "McDonald Local School District"
                        },
                        new
                        {
                            Id = new Guid("12814fe4-4dd2-4924-928f-c5a5b7b564d4"),
                            Name = "Newton Falls Exempted Village School District"
                        },
                        new
                        {
                            Id = new Guid("ae12af4d-f465-453a-b60c-0634b60e7c68"),
                            Name = "Niles City School District"
                        },
                        new
                        {
                            Id = new Guid("d5c9a6f0-830b-45e8-bb9d-bfea2ae0c1f6"),
                            Name = "Southington Local School District"
                        },
                        new
                        {
                            Id = new Guid("f0c7c5ea-b8ba-4749-b22f-3c688f6a5f6b"),
                            Name = "Trumbull Career & Technical Center"
                        },
                        new
                        {
                            Id = new Guid("8c12eda9-9d01-43ed-b939-7d6496d0b290"),
                            Name = "Trumbull County Educational Service Center"
                        },
                        new
                        {
                            Id = new Guid("b2c12a80-af41-4625-9305-64db7961f717"),
                            Name = "Warren City School District"
                        },
                        new
                        {
                            Id = new Guid("00d3eec9-fdb6-435a-b29c-1204afc27f8f"),
                            Name = "Weathersfield Local School District"
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.SchoolData.SchoolDistrictSchool", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SchoolDistrictSchoolId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("EndDate");

                    b.Property<Guid>("SchoolDistrictId");

                    b.Property<Guid>("SchoolId");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("SchoolDistrictSchools","SchoolData");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a0038fde-9349-4f01-b128-0197d2c7c597"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("5c9cebdb-e269-4f86-9402-3528bf077152"),
                            SchoolId = new Guid("e5629354-5b2f-4fce-adb3-801bb643a70f"),
                            StartDate = new DateTime(2019, 3, 5, 22, 47, 25, 640, DateTimeKind.Utc).AddTicks(6971)
                        },
                        new
                        {
                            Id = new Guid("a8f3502a-1b5d-4a1e-bd3f-648cce57ded1"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("27586934-ac84-4ba2-8fc1-c879c059c9dc"),
                            SchoolId = new Guid("52cd27d7-50d4-4b58-b23f-eaf2b99328df"),
                            StartDate = new DateTime(2019, 3, 5, 22, 47, 25, 640, DateTimeKind.Utc).AddTicks(8232)
                        },
                        new
                        {
                            Id = new Guid("2eed2da9-ca85-41cd-b94f-b26cff0b6600"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("27586934-ac84-4ba2-8fc1-c879c059c9dc"),
                            SchoolId = new Guid("f444b8e7-9b7a-489e-91db-3f3aedba3929"),
                            StartDate = new DateTime(2019, 3, 5, 22, 47, 25, 640, DateTimeKind.Utc).AddTicks(8244)
                        },
                        new
                        {
                            Id = new Guid("260324e0-0a56-40ef-ae5d-0288445319f0"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("32339fb9-6cf5-4bd5-b6f8-015cf10d0d93"),
                            SchoolId = new Guid("2e163b76-966e-4e5d-8ab6-267bd605055c"),
                            StartDate = new DateTime(2019, 3, 5, 22, 47, 25, 640, DateTimeKind.Utc).AddTicks(8253)
                        },
                        new
                        {
                            Id = new Guid("c05e7ee6-249b-4aa9-a0ff-9585f96fc727"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("32339fb9-6cf5-4bd5-b6f8-015cf10d0d93"),
                            SchoolId = new Guid("076bd0ad-b1cb-4d1c-b32f-d3fadd68c1d4"),
                            StartDate = new DateTime(2019, 3, 5, 22, 47, 25, 640, DateTimeKind.Utc).AddTicks(8312)
                        },
                        new
                        {
                            Id = new Guid("941e7df7-05e2-40dc-b6e1-b271082d0480"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("2876ce59-30b2-44c9-91de-996bd2fb1bb4"),
                            SchoolId = new Guid("1d33877a-cfe0-47ab-89fa-3313b6e982de"),
                            StartDate = new DateTime(2019, 3, 5, 22, 47, 25, 640, DateTimeKind.Utc).AddTicks(8328)
                        },
                        new
                        {
                            Id = new Guid("0a0d40f7-64b6-49cd-a2a0-077c7b721a76"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("2876ce59-30b2-44c9-91de-996bd2fb1bb4"),
                            SchoolId = new Guid("65e5768e-e78d-478c-b1cd-82ff52d81665"),
                            StartDate = new DateTime(2019, 3, 5, 22, 47, 25, 640, DateTimeKind.Utc).AddTicks(8337)
                        },
                        new
                        {
                            Id = new Guid("354f67d3-1327-4dca-8d12-a91c192bfb8f"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("2876ce59-30b2-44c9-91de-996bd2fb1bb4"),
                            SchoolId = new Guid("d97aec4f-0188-4bf0-b500-25ea0379e368"),
                            StartDate = new DateTime(2019, 3, 5, 22, 47, 25, 640, DateTimeKind.Utc).AddTicks(8349)
                        },
                        new
                        {
                            Id = new Guid("8e76bc85-96b6-45f3-9efb-7ec556802716"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("44279467-a91b-43ba-979c-96b11723b286"),
                            SchoolId = new Guid("9eb93fa8-294c-4f94-8f43-ec0b89302a14"),
                            StartDate = new DateTime(2019, 3, 5, 22, 47, 25, 640, DateTimeKind.Utc).AddTicks(8358)
                        },
                        new
                        {
                            Id = new Guid("666791ea-dd63-4753-81ab-034da14b767f"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("44279467-a91b-43ba-979c-96b11723b286"),
                            SchoolId = new Guid("28134d37-13cf-4632-8d86-8be74621eeaa"),
                            StartDate = new DateTime(2019, 3, 5, 22, 47, 25, 640, DateTimeKind.Utc).AddTicks(8368)
                        },
                        new
                        {
                            Id = new Guid("1f0a0ddc-a837-4ebd-993d-dc84ac6e7a44"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("44279467-a91b-43ba-979c-96b11723b286"),
                            SchoolId = new Guid("4d8e87a1-e0a4-4770-a01f-401c111fd460"),
                            StartDate = new DateTime(2019, 3, 5, 22, 47, 25, 640, DateTimeKind.Utc).AddTicks(8377)
                        },
                        new
                        {
                            Id = new Guid("021ceed1-3cf1-42ec-bf51-bab34b1033d5"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("603fdca0-91b4-4874-bef3-dd0791c0fa08"),
                            SchoolId = new Guid("b208d6f0-18fa-4d55-8506-51f2736fc17a"),
                            StartDate = new DateTime(2019, 3, 5, 22, 47, 25, 640, DateTimeKind.Utc).AddTicks(8386)
                        },
                        new
                        {
                            Id = new Guid("c8448510-f518-4f21-8534-dbf1301aed69"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("603fdca0-91b4-4874-bef3-dd0791c0fa08"),
                            SchoolId = new Guid("9656faf6-f133-4ad9-ae97-48d1937f73c0"),
                            StartDate = new DateTime(2019, 3, 5, 22, 47, 25, 640, DateTimeKind.Utc).AddTicks(8394)
                        },
                        new
                        {
                            Id = new Guid("f6f4db6b-1da8-425c-919a-7a7e2dbd1035"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("603fdca0-91b4-4874-bef3-dd0791c0fa08"),
                            SchoolId = new Guid("54f53b19-8eb0-46ac-8d09-f1ded3f3b6f7"),
                            StartDate = new DateTime(2019, 3, 5, 22, 47, 25, 640, DateTimeKind.Utc).AddTicks(8405)
                        },
                        new
                        {
                            Id = new Guid("39466886-488b-4675-aa17-3c20c0972628"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SchoolDistrictId = new Guid("603fdca0-91b4-4874-bef3-dd0791c0fa08"),
                            SchoolId = new Guid("27f0980c-c946-47a3-b61b-edc2e88b6f7b"),
                            StartDate = new DateTime(2019, 3, 5, 22, 47, 25, 640, DateTimeKind.Utc).AddTicks(8413)
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleId");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DateCreated");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Roles","Security");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d517d20f-12f0-432c-af9d-3eafae7a8326"),
                            DateCreated = new DateTime(2019, 3, 5, 22, 47, 25, 638, DateTimeKind.Utc).AddTicks(6265),
                            Description = "Total access to all other roles",
                            IsActive = true,
                            Name = "System Administrator"
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TeamId");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DateCreated");

                    b.Property<DateTime>("DateModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("DateModified");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Teams","Security");
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.TeamRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TeamRoleId");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("DateCreated");

                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("TeamId");

                    b.HasKey("Id");

                    b.ToTable("TeamRoles","Security");
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.TeamUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TeamUserId");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("DateCreated");

                    b.Property<Guid>("TeamId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("TeamUsers","Security");
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserId");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DateCreated");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnName("EmailAddress")
                        .HasMaxLength(150);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("LastName")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnName("MiddleName")
                        .HasMaxLength(50);

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("UserName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Users","Security");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8a821d4e-e70c-4cfd-8c2e-c388aa17ea9a"),
                            DateCreated = new DateTime(2019, 3, 5, 22, 47, 25, 642, DateTimeKind.Utc).AddTicks(4668),
                            EmailAddress = "auser1@email.com",
                            FirstName = "A",
                            IsActive = true,
                            LastName = "User1",
                            MiddleName = "A",
                            UserName = "auser1"
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.Models.Security.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserRoleId");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("DateCreated");

                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserRoles","Security");
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.SchoolData.Models.School", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SchoolId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Schools","SchoolData");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5629354-5b2f-4fce-adb3-801bb643a70f"),
                            Name = "Austintown Fitch High School"
                        },
                        new
                        {
                            Id = new Guid("52cd27d7-50d4-4b58-b23f-eaf2b99328df"),
                            Name = "Bloomfield Middle/High School"
                        },
                        new
                        {
                            Id = new Guid("2e163b76-966e-4e5d-8ab6-267bd605055c"),
                            Name = "Bristol Elementary"
                        },
                        new
                        {
                            Id = new Guid("076bd0ad-b1cb-4d1c-b32f-d3fadd68c1d4"),
                            Name = "Bristol Middle & High School"
                        },
                        new
                        {
                            Id = new Guid("1d33877a-cfe0-47ab-89fa-3313b6e982de"),
                            Name = "Brookfield Elementary School"
                        },
                        new
                        {
                            Id = new Guid("65e5768e-e78d-478c-b1cd-82ff52d81665"),
                            Name = "Brookfield Middle School"
                        },
                        new
                        {
                            Id = new Guid("d97aec4f-0188-4bf0-b500-25ea0379e368"),
                            Name = "Brookfield High School"
                        },
                        new
                        {
                            Id = new Guid("807bad9c-f86f-4e27-aeab-b8f4767c9866"),
                            Name = "Canfield High School"
                        },
                        new
                        {
                            Id = new Guid("9eb93fa8-294c-4f94-8f43-ec0b89302a14"),
                            Name = "Central Elementary"
                        },
                        new
                        {
                            Id = new Guid("28134d37-13cf-4632-8d86-8be74621eeaa"),
                            Name = "Champion High School"
                        },
                        new
                        {
                            Id = new Guid("4d8e87a1-e0a4-4770-a01f-401c111fd460"),
                            Name = "Champion Middle School"
                        },
                        new
                        {
                            Id = new Guid("b208d6f0-18fa-4d55-8506-51f2736fc17a"),
                            Name = "Girard High School"
                        },
                        new
                        {
                            Id = new Guid("9656faf6-f133-4ad9-ae97-48d1937f73c0"),
                            Name = "Girard Intermediate"
                        },
                        new
                        {
                            Id = new Guid("54f53b19-8eb0-46ac-8d09-f1ded3f3b6f7"),
                            Name = "Girard Junior High School"
                        },
                        new
                        {
                            Id = new Guid("0c5977dd-0862-40d7-bbf8-8b24d80d206b"),
                            Name = "Liberty High School"
                        },
                        new
                        {
                            Id = new Guid("f444b8e7-9b7a-489e-91db-3f3aedba3929"),
                            Name = "Mesopatamia Elementary"
                        },
                        new
                        {
                            Id = new Guid("27f0980c-c946-47a3-b61b-edc2e88b6f7b"),
                            Name = "Prospect Elementary"
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.SchoolData.Models.SchoolStudent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SchoolStudentId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("GradeLevel")
                        .IsRequired();

                    b.Property<DateTime>("RegistrationDate")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("SchoolId");

                    b.Property<Guid>("StudentId");

                    b.HasKey("Id");

                    b.ToTable("SchoolStudents","SchoolData");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b0514f3-2148-46b4-88f1-558066b3b158"),
                            DateCreated = new DateTime(2019, 3, 5, 22, 47, 25, 641, DateTimeKind.Utc).AddTicks(8712),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 5, 22, 47, 25, 642, DateTimeKind.Utc).AddTicks(470),
                            SchoolId = new Guid("e5629354-5b2f-4fce-adb3-801bb643a70f"),
                            StudentId = new Guid("c60fb528-5c00-4724-9eaf-5800a91d72a4")
                        },
                        new
                        {
                            Id = new Guid("250809a1-f0b8-4ab5-b751-6094db3b39c6"),
                            DateCreated = new DateTime(2019, 3, 5, 22, 47, 25, 642, DateTimeKind.Utc).AddTicks(2986),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 5, 22, 47, 25, 642, DateTimeKind.Utc).AddTicks(3000),
                            SchoolId = new Guid("52cd27d7-50d4-4b58-b23f-eaf2b99328df"),
                            StudentId = new Guid("07b2ec10-397f-448f-b0fc-d73b29432659")
                        },
                        new
                        {
                            Id = new Guid("f1060e6e-33fc-458e-9bef-6351c3aef7cd"),
                            DateCreated = new DateTime(2019, 3, 5, 22, 47, 25, 642, DateTimeKind.Utc).AddTicks(3025),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 5, 22, 47, 25, 642, DateTimeKind.Utc).AddTicks(3026),
                            SchoolId = new Guid("52cd27d7-50d4-4b58-b23f-eaf2b99328df"),
                            StudentId = new Guid("11a9c60b-21ed-49e9-b325-ca1a8724075d")
                        },
                        new
                        {
                            Id = new Guid("d4a544a5-1a3c-4bf8-85cd-ccef44410a5c"),
                            DateCreated = new DateTime(2019, 3, 5, 22, 47, 25, 642, DateTimeKind.Utc).AddTicks(3031),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 5, 22, 47, 25, 642, DateTimeKind.Utc).AddTicks(3032),
                            SchoolId = new Guid("b208d6f0-18fa-4d55-8506-51f2736fc17a"),
                            StudentId = new Guid("ea34cac9-5697-42ac-bf71-f56fde284088")
                        },
                        new
                        {
                            Id = new Guid("78effc37-c64e-40b9-9ffe-a751240183e4"),
                            DateCreated = new DateTime(2019, 3, 5, 22, 47, 25, 642, DateTimeKind.Utc).AddTicks(3038),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 5, 22, 47, 25, 642, DateTimeKind.Utc).AddTicks(3039),
                            SchoolId = new Guid("b208d6f0-18fa-4d55-8506-51f2736fc17a"),
                            StudentId = new Guid("322ded75-d390-4889-bc51-0fc6958fe20c")
                        },
                        new
                        {
                            Id = new Guid("59d0ed87-ed70-4ef2-863f-7a44b23b0632"),
                            DateCreated = new DateTime(2019, 3, 5, 22, 47, 25, 642, DateTimeKind.Utc).AddTicks(3046),
                            GradeLevel = "9",
                            RegistrationDate = new DateTime(2019, 3, 5, 22, 47, 25, 642, DateTimeKind.Utc).AddTicks(3047),
                            SchoolId = new Guid("b208d6f0-18fa-4d55-8506-51f2736fc17a"),
                            StudentId = new Guid("6ae50ec6-12dd-48a8-9602-a796cd8f0d5f")
                        });
                });

            modelBuilder.Entity("SchoolMachine.DataAccess.Entities.SchoolData.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StudentId");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("Students","SchoolData");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c60fb528-5c00-4724-9eaf-5800a91d72a4"),
                            BirthDate = new DateTime(2005, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Abott",
                            MiddleName = "Alfred"
                        },
                        new
                        {
                            Id = new Guid("07b2ec10-397f-448f-b0fc-d73b29432659"),
                            BirthDate = new DateTime(2005, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ann",
                            LastName = "Smith",
                            MiddleName = "Grace"
                        },
                        new
                        {
                            Id = new Guid("11a9c60b-21ed-49e9-b325-ca1a8724075d"),
                            BirthDate = new DateTime(2004, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bill",
                            LastName = "Kriter",
                            MiddleName = "Anthony"
                        },
                        new
                        {
                            Id = new Guid("ea34cac9-5697-42ac-bf71-f56fde284088"),
                            BirthDate = new DateTime(2005, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sara",
                            LastName = "Carter",
                            MiddleName = "Lynn"
                        },
                        new
                        {
                            Id = new Guid("322ded75-d390-4889-bc51-0fc6958fe20c"),
                            BirthDate = new DateTime(2006, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Timkin",
                            MiddleName = "Dudley"
                        },
                        new
                        {
                            Id = new Guid("6ae50ec6-12dd-48a8-9602-a796cd8f0d5f"),
                            BirthDate = new DateTime(2006, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Abby",
                            LastName = "Smart",
                            MiddleName = "Darla"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
